from aiogram.filters.callback_data import CallbackData
from aiogram.utils.keyboard import InlineKeyboardBuilder


class ParamsMyCallback(CallbackData, prefix="params"):
    callback: str
    bar: int

async def params_keyboard(
        user_order_limit: float,
        percent_profit: float,
        autobuy_up_sec: int,
        autobuy_down_percent: float,
        taker: float = 0,
        maker: float = 0.00
):
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text=f'–†–∞–∑–º–µ—Ä –æ—Ä–¥–µ—Ä–∞ ‚Äì {round(user_order_limit, 2)} USDT', callback_data='set_order_limit')
    keyboard.button(text=f'–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª–∏ ‚Äì {round(percent_profit, 2)} %', callback_data='set_profit_percent')
    keyboard.button(text=f'–ê–≤—Ç–æ–ø–æ–∫—É–ø–∫–∞ –ø—Ä–∏ —Ä–æ—Å—Ç–µ ‚Äì {autobuy_up_sec} —Å–µ–∫', callback_data='set_autobuy_up')
    
    if isinstance(autobuy_down_percent, float) and autobuy_down_percent != 1000:
        keyboard.button(text=f'–ê–≤—Ç–æ–ø–æ–∫—É–ø–∫–∞ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ ‚Äì {round(autobuy_down_percent, 2)} %', callback_data='set_autobuy_down')
    if autobuy_down_percent == 1000:
        keyboard.button(text=f'–ê–≤—Ç–æ–ø–æ–∫—É–ø–∫–∞ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ ‚Äì –æ—Ç–∫–ª. üö´', callback_data='set_autobuy_down')
    keyboard.button(text=f'–ö–æ–º–∏—Å—Å–∏—è –±–∏—Ä–∂–∏ M: {round(maker, 2)}% | T: {round(taker, 2) if taker >= 0.02 else round(taker, 5)}%', callback_data='set_user_commission')
    
    
    
    keyboard.button(text='–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='reset_settings')
    keyboard.adjust(1)
    
    return keyboard.as_markup()


async def user_autobuy_down_keyboard_off():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text=f'–û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø–∞–¥–µ–Ω–∏–µ', callback_data='autobuy_off')
    keyboard.button(text=f'üîô', callback_data='cancel_to_parametrs')
    keyboard.adjust(1)
    return keyboard.as_markup()


async def back_keyboard():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text=f'üîô', callback_data='cancel_to_parametrs')
    return keyboard.as_markup()


async def yes_no_keyboard():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text=f'–î–∞', callback_data='yes_callback')
    keyboard.button(text=f'–ù–µ—Ç', callback_data='cancel_to_parametrs')
    return keyboard.as_markup()

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∏—Å–∏–∏ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
async def user_commission_choices():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text=f'M–µ–π–∫–µ—Ä: 0.00% | T–µ–π–∫–µ—Ä: 0.020% ', callback_data='set_user_commission_3')
    keyboard.button(text=f'M–µ–π–∫–µ—Ä: 0.00% | T–µ–π–∫–µ—Ä: 0.016% ', callback_data='set_user_commission_2')
    keyboard.button(text=f'M–µ–π–∫–µ—Ä: 0.00% | T–µ–π–∫–µ—Ä: 0.010%', callback_data='set_user_commission_1')
    keyboard.button(text=f'–ú–æ—è –∫–æ–º–∏—Å—Å–∏—è: ', callback_data='user_check_commission')
    keyboard.button(text=f'üîô', callback_data='cancel_to_parametrs')
    keyboard.adjust(1)
    return keyboard.as_markup()

def commission_to_url():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text=f'–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è üî∫', callback_data='set_user_commission_4')
    keyboard.button(text=f'–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ —Å–∞–π—Ç–µ', url='https://www.mexc.com/fee')
    keyboard.button(text=f'üîô', callback_data='set_user_commission')
    keyboard.adjust(1)
    return keyboard.as_markup()

def admin_keyboard(level: int = 0):
    keyboard = InlineKeyboardBuilder()
    if level == 0:
        keyboard.button(text=f'1.–û–ë–ù–û–í–ò–¢–¨–°–Ø', callback_data='refreshing')
        keyboard.button(text=f'–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ–≥', callback_data='get_logs')
    if level == 1:
        keyboard.button(text=f'1.–û–±–Ω–æ–≤–∏—Ç—å', callback_data='refresh')
        keyboard.button(text=f'2.–ö–æ–ª–±–∞—Å–∞', callback_data='restart')
        keyboard.button(text=f'üîô', callback_data='back_to_admin')
    keyboard.adjust(1)
    return keyboard.as_markup()